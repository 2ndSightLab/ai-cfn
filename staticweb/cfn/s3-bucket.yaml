AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for S3 bucket with all possible properties as parameters'

Parameters:
  # Main bucket parameters
  BucketName:
    Type: String
    Description: Name of the S3 bucket

  #Never use ACLs. Use a bucket policy.
  #Should use CloudFront and never make bucket public
  #AccessControl:
  #  Type: String
  #  Description: Canned ACL to apply to the bucket
  #  Default: ''
  #  AllowedValues:
  #    - ''
  #   - Private
  #    - PublicRead
  #    - PublicReadWrite
  #    - AuthenticatedRead
  #    - LogDeliveryWrite
  #    - BucketOwnerRead
  #    - BucketOwnerFullControl
  #    - AwsExecRead
      
  ObjectLockEnabled:
    Type: String
    Description: Enable object lock
    Default: ''
    AllowedValues:
      - ''
      - 'true'
      - 'false'
      
  Tags:
    Type: CommaDelimitedList
    Description: List of tags (Key=Value format)
    Default: ''
    
  # AccelerateConfiguration parameters
  AccelerateConfigurationAccelerationStatus:
    Type: String
    Description: Accelerate configuration status
    Default: ''
    AllowedValues:
      - ''
      - Enabled
      - Suspended
      
  # AnalyticsConfiguration parameters
  AnalyticsConfigurationId:
    Type: String
    Description: ID for the analytics configuration
    Default: ''
    
  AnalyticsConfigurationPrefix:
    Type: String
    Description: Prefix for the analytics configuration
    Default: ''
    
  AnalyticsConfigurationTagFilters:
    Type: CommaDelimitedList
    Description: Tag filters for the analytics configuration (Key=Value format)
    Default: ''
    
  # BucketEncryption parameters
  BucketEncryptionSSEAlgorithm:
    Type: String
    Description: Server-side encryption algorithm
    Default: ''
    AllowedValues:
      - ''
      - AES256
      - aws:kms
      
  BucketEncryptionKMSMasterKeyID:
    Type: String
    Description: KMS master key ID for server-side encryption
    Default: ''
    
  BucketEncryptionBucketKeyEnabled:
    Type: String
    Description: Enable S3 Bucket Key
    Default: ''
    AllowedValues:
      - ''
      - 'true'
      - 'false'
      
  # CorsConfiguration parameters
  CorsConfigurationAllowedHeaders:
    Type: CommaDelimitedList
    Description: Allowed headers for CORS configuration
    Default: ''
    
  CorsConfigurationAllowedMethods:
    Type: CommaDelimitedList
    Description: Allowed methods for CORS configuration
    Default: ''
    
  CorsConfigurationAllowedOrigins:
    Type: CommaDelimitedList
    Description: Allowed origins for CORS configuration
    Default: ''
    
  CorsConfigurationExposedHeaders:
    Type: CommaDelimitedList
    Description: Exposed headers for CORS configuration
    Default: ''
    
  CorsConfigurationMaxAge:
    Type: Number
    Description: Maximum age for CORS preflight cache
    Default: 0
    
  # LifecycleConfiguration parameters
  LifecycleConfigurationId:
    Type: String
    Description: ID for the lifecycle configuration
    Default: ''
    
  LifecycleConfigurationPrefix:
    Type: String
    Description: Prefix for the lifecycle configuration
    Default: ''
    
  LifecycleConfigurationTagFilters:
    Type: CommaDelimitedList
    Description: Tag filters for the lifecycle configuration
    Default: ''
    
  # LoggingConfiguration parameters
  LoggingConfigurationDestination:
    Type: String
    Description: Destination for logging configuration
    Default: ''
    
  LoggingConfigurationLogFilePrefix:
    Type: String
    Description: Log file prefix for logging configuration
    Default: ''
    
  # MetricsConfiguration parameters
  MetricsConfigurationId:
    Type: String
    Description: ID for the metrics configuration
    Default: ''
    
  MetricsConfigurationPrefix:
    Type: String
    Description: Prefix for the metrics configuration
    Default: ''
    
  # NotificationConfiguration parameters

  #EventBridgeConfigurationEventBridgeEnabled
  #https://docs.aws.amazon.com/AWSCloudFormation/latest/TemplateReference/aws-properties-s3-bucket-eventbridgeconfiguration.html
  
  NotificationLambdaEvent:
    Type: String
    Description: Event for Lambda notification
    Default: ''
    
  NotificationLambdaFunction:
    Type: String
    Description: ARN of Lambda function for notification
    Default: ''
    
  #QueueConfigurationQueue
  #QueueConfigurationEvent
  #QueueConfigurationFilter
  #https://docs.aws.amazon.com/AWSCloudFormation/latest/TemplateReference/aws-properties-s3-bucket-notificationconfiguration.html#cfn-s3-bucket-notificationconfiguration-queueconfigurations

  #TopicConfigurationEvent
  #TopicConfigurationFilter
  #TopicConfigurationTopic
  #https://docs.aws.amazon.com/AWSCloudFormation/latest/TemplateReference/aws-properties-s3-bucket-topicconfiguration.html
  
  # OwnershipControls parameters
  OwnershipControlsRule:
    Type: String
    Description: Ownership controls rule
    Default: ''
    
  # ReplicationConfiguration parameters
  ReplicationConfigurationRole:
    Type: String
    Description: IAM role ARN for replication
    Default: ''
    
  # VersioningConfiguration parameters
  VersioningConfigurationStatus:
    Type: String
    Description: Versioning state of the bucket
    Default: ''
    AllowedValues:
      - ''
      - Enabled
      - Suspended
      
  # WebsiteConfiguration parameters
  WebsiteIndexDocument:
    Type: String
    Description: Index document for website configuration
    Default: ''
    
  WebsiteErrorDocument:
    Type: String
    Description: Error document for website configuration
    Default: ''
    
  WebsiteRedirectAllRequestsToHostName:
    Type: String
    Description: Host name for redirect all requests
    Default: ''
    
  WebsiteRedirectAllRequestsToProtocol:
    Type: String
    Description: Protocol for redirect all requests
    Default: ''
    AllowedValues:
      - ''
      - http
      - https
      
  WebsiteRoutingRules:
    Type: CommaDelimitedList
    Description: Routing rules for website configuration
    Default: ''

Conditions:
  HasBucketName: !Not [!Equals [!Ref BucketName, '']]
  #HasAccessControl: !Not [!Equals [!Ref AccessControl, '']]
  HasObjectLockEnabled: !Not [!Equals [!Ref ObjectLockEnabled, '']]
  HasTags: !Not [!Equals [!Select [0, !Ref Tags], '']]
  
  # CORS conditions
  HasCorsConfiguration: !Not [!Equals [!Select [0, !Ref CorsConfigurationAllowedHeaders], '']]
  HasCorsAllowedMethods: !Not [!Equals [!Select [0, !Ref CorsConfigurationAllowedMethods], '']]
  HasCorsAllowedOrigins: !Not [!Equals [!Select [0, !Ref CorsConfigurationAllowedOrigins], '']]
  
  # Lifecycle conditions
  HasLifecycleConfiguration: !Not [!Equals [!Ref LifecycleConfigurationPrefix, '']]
  
  # Logging conditions
  HasLoggingConfiguration: !Not [!Equals [!Ref LoggingConfigurationDestination, '']]
  
  # Metrics conditions
  HasMetricsConfiguration: !Not [!Equals [!Ref MetricsConfigurationPrefix, '']]

  # Notification conditions
  HasNotificationLambdaConfiguration: !Not [!Equals [!Ref NotificationLambdaEvent, '']]
  #Queue
  #Topic
  #EventBridge
  
  # BucketEncryption conditions
  HasBucketEncryption: !Not [!Equals [!Ref BucketEncryptionSSEAlgorithm, '']]

  # OwnershipControls conditions
  HasOwnershipControls: !Not [!Equals [!Ref OwnershipControlsRule, '']]

  # Replication conditions
  HasReplicationConfiguration: !Not [!Equals [!Ref ReplicationConfigurationRole, '']]
  
  # Versioning conditions
  HasVersioningConfiguration: !Not [!Equals [!Ref VersioningConfigurationStatus, '']]
  
  # Website conditions
  HasWebsiteIndexDocument: !Not [!Equals [!Ref WebsiteIndexDocument, '']]
  HasWebsiteErrorDocument: !Not [!Equals [!Ref WebsiteErrorDocument, '']]
  HasWebsiteRedirectAllRequestsToHostName: !Not [!Equals [!Ref WebsiteRedirectAllRequestsToHostName, '']]
  HasWebsiteRedirectAllRequestsToProtocol: !Not [!Equals [!Ref WebsiteRedirectAllRequestsToProtocol, '']]
  HasWebsiteRoutingRules: !Not [!Equals [!Select [0, !Ref WebsiteRoutingRules], '']]

  # Condition for website configuration
  HasWebsiteConfiguration: !Or
    - !Condition HasWebsiteIndexDocument
    - !Condition HasWebsiteRedirectAllRequestsToHostName

Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !If [HasBucketName, !Ref BucketName, !Ref 'AWS::NoValue']
      #AccessControl: !If [HasAccessControl, !Ref AccessControl, !Ref 'AWS::NoValue']
      ObjectLockEnabled: !If [HasObjectLockEnabled, !Ref ObjectLockEnabled, !Ref 'AWS::NoValue']
      Tags: !If [HasTags, !Join [',', !Ref Tags], !Ref 'AWS::NoValue']

      # PublicAccessBlockConfiguration - always true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

      # CORSConfiguration
      CorsConfiguration:
        !If 
          - HasCorsConfiguration
          - CorsRules:
              - AllowedHeaders: !If [HasCorsConfiguration, !Ref CorsConfigurationAllowedHeaders, !Ref 'AWS::NoValue']
                AllowedMethods: !If [HasCorsAllowedMethods, !Ref CorsConfigurationAllowedMethods, !Ref 'AWS::NoValue']
                AllowedOrigins: !If [HasCorsAllowedOrigins, !Ref CorsConfigurationAllowedOrigins, !Ref 'AWS::NoValue']
          - !Ref 'AWS::NoValue'


      # LifecycleConfiguration
      #LifecycleConfiguration:
      #  !If 
      #    - HasLifecycleConfiguration
      #    - Rules:
      #      - Id: !If 
      #          - HasLifecycleConfigurationPrefix
      #          - !Ref LifecycleConfigurationPrefix
      #          - !Ref 'AWS::NoValue'
      #    - !Ref 'AWS::NoValue'

      # LoggingConfiguration
      LoggingConfiguration:
          !If 
          - HasLoggingConfiguration
          - DestinationBucketName: !Ref LoggingConfigurationDestination
          - !Ref 'AWS::NoValue'
          
      # MetricsConfiguration
      MetricsConfiguration:
        !If 
          - HasMetricsConfiguration
          - Id: !Ref MetricsConfigurationPrefix
          - !Ref 'AWS::NoValue'

      # NotificationConfiguration
      NotificationConfiguration:
        LambdaConfigurations:
          !If
            - HasNotificationLambdaConfiguration
            - - Event: !Ref NotificationLambdaEvent
                Function: !Ref NotificationLambdaFunction
            - !Ref 'AWS::NoValue'
          #Queue
          #Topic
          #EventBridge

      # BucketEncryption
      BucketEncryption:
        !If 
          - HasBucketEncryption
          - ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: !Ref BucketEncryptionSSEAlgorithm
          - !Ref 'AWS::NoValue'

      # OwnershipControls
      OwnershipControls:
        !If 
          - HasOwnershipControls
          - Rules:
              - ObjectOwnership: BucketOwnerPreferred  # Valid values: BucketOwnerPreferred, ObjectWriter, BucketOwnerEnforced
          - !Ref 'AWS::NoValue'

      # Hard to set this way because Rules is a list
      # ReplicationConfiguration
      #ReplicationConfiguration:
      #  !If 
      #    - HasReplicationConfiguration
      #    - Role: !Ref ReplicationConfigurationRole  # Should reference an IAM role ARN
      #      Rules:
      #        - Destination:
      #            Bucket: !Ref DestinationBucketARN
      #          Status: Enabled
      #          # Add other required properties like Priority, Filter, etc. as needed
      #    - !Ref 'AWS::NoValue'

      # VersioningConfiguration
      VersioningConfiguration:
        !If 
          - HasVersioningConfiguration
          - Status: !Ref VersioningConfigurationStatus
          - !Ref 'AWS::NoValue'
          
      # WebsiteConfiguration
      WebsiteConfiguration:
        !If 
          - HasWebsiteConfiguration
          - IndexDocument: !If [HasWebsiteIndexDocument, !Ref WebsiteIndexDocument, !Ref 'AWS::NoValue']
            ErrorDocument: !If [HasWebsiteErrorDocument, !Ref WebsiteErrorDocument, !Ref 'AWS::NoValue']
            RoutingRules: !If [HasWebsiteRoutingRules, !Ref WebsiteRoutingRules, !Ref 'AWS::NoValue']
            RedirectAllRequestsTo:
              !If 
                - HasWebsiteRedirectAllRequestsToHostName
                - HostName: !Ref WebsiteRedirectAllRequestsToHostName
                  Protocol: !If [HasWebsiteRedirectAllRequestsToProtocol, !Ref WebsiteRedirectAllRequestsToProtocol, !Ref 'AWS::NoValue']
                - !Ref 'AWS::NoValue'
          - !Ref 'AWS::NoValue'
          
Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref S3Bucket
    Export:
      Name: !Sub ${AWS::StackName}-S3AccessLogsBucketName
  
  BucketARN:
    Description: ARN of the created S3 bucket
    Value: !GetAtt S3Bucket.Arn
    Export:
      Name: !Sub ${AWS::StackName}-S3AccessLogsBucketArn
  
  BucketDomainName:
    Description: Domain name of the created S3 bucket
    Value: !GetAtt S3Bucket.DomainName
    Export:
      Name: !Sub ${AWS::StackName}-S3AccessLogsBucketDomainName
  
  BucketRegionalDomainName:
    Description: Regional domain name of the created S3 bucket
    Value: !GetAtt S3Bucket.RegionalDomainName
    Export:
      Name: !Sub ${AWS::StackName}-S3AccessLogsBucketRegionalDomainName
  
  BucketWebsiteURL:
    Description: Website URL of the created S3 bucket (if website configuration is enabled)
    Value: !If [HasWebsiteConfiguration, !GetAtt S3Bucket.WebsiteURL, !Ref 'AWS::NoValue']
    Condition: HasWebsiteConfiguration
    Export:
      Name: !Sub ${AWS::StackName}-S3AccessLogsBucketWebsiteURL
      
