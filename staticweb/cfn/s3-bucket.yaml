AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for S3 bucket with all possible properties as parameters'

Parameters:
  # Main bucket parameters
  BucketName:
    Type: String
    Description: Name of the S3 bucket
    
  AccessControl:
    Type: String
    Description: Canned ACL to apply to the bucket
    Default: ''
    AllowedValues:
      - ''
      - Private
      - PublicRead
      - PublicReadWrite
      - AuthenticatedRead
      - LogDeliveryWrite
      - BucketOwnerRead
      - BucketOwnerFullControl
      - AwsExecRead
      
  ObjectLockEnabled:
    Type: String
    Description: Enable object lock
    Default: ''
    AllowedValues:
      - ''
      - 'true'
      - 'false'
      
  Tags:
    Type: CommaDelimitedList
    Description: List of tags (Key=Value format)
    Default: ''
    
  # AccelerateConfiguration parameters
  AccelerateConfigurationAccelerationStatus:
    Type: String
    Description: Accelerate configuration status
    Default: ''
    AllowedValues:
      - ''
      - Enabled
      - Suspended
      
  # AnalyticsConfiguration parameters
  AnalyticsConfigurationId:
    Type: String
    Description: ID for the analytics configuration
    Default: ''
    
  AnalyticsConfigurationPrefix:
    Type: String
    Description: Prefix for the analytics configuration
    Default: ''
    
  AnalyticsConfigurationTagFilters:
    Type: CommaDelimitedList
    Description: Tag filters for the analytics configuration (Key=Value format)
    Default: ''
    
  # BucketEncryption parameters
  BucketEncryptionSSEAlgorithm:
    Type: String
    Description: Server-side encryption algorithm
    Default: ''
    AllowedValues:
      - ''
      - AES256
      - aws:kms
      
  BucketEncryptionKMSMasterKeyID:
    Type: String
    Description: KMS master key ID for server-side encryption
    Default: ''
    
  BucketEncryptionBucketKeyEnabled:
    Type: String
    Description: Enable S3 Bucket Key
    Default: ''
    AllowedValues:
      - ''
      - 'true'
      - 'false'
      
  # CorsConfiguration parameters
  CorsConfigurationAllowedHeaders:
    Type: CommaDelimitedList
    Description: Allowed headers for CORS configuration
    Default: ''
    
  CorsConfigurationAllowedMethods:
    Type: CommaDelimitedList
    Description: Allowed methods for CORS configuration
    Default: ''
    
  CorsConfigurationAllowedOrigins:
    Type: CommaDelimitedList
    Description: Allowed origins for CORS configuration
    Default: ''
    
  CorsConfigurationExposedHeaders:
    Type: CommaDelimitedList
    Description: Exposed headers for CORS configuration
    Default: ''
    
  CorsConfigurationMaxAge:
    Type: Number
    Description: Maximum age for CORS preflight cache
    Default: 0
    
  # LifecycleConfiguration parameters
  LifecycleConfigurationId:
    Type: String
    Description: ID for the lifecycle configuration
    Default: ''
    
  LifecycleConfigurationPrefix:
    Type: String
    Description: Prefix for the lifecycle configuration
    Default: ''
    
  LifecycleConfigurationTagFilters:
    Type: CommaDelimitedList
    Description: Tag filters for the lifecycle configuration
    Default: ''
    
  # LoggingConfiguration parameters
  LoggingConfigurationDestination:
    Type: String
    Description: Destination for logging configuration
    Default: ''
    
  LoggingConfigurationLogFilePrefix:
    Type: String
    Description: Log file prefix for logging configuration
    Default: ''
    
  # MetricsConfiguration parameters
  MetricsConfigurationId:
    Type: String
    Description: ID for the metrics configuration
    Default: ''
    
  MetricsConfigurationPrefix:
    Type: String
    Description: Prefix for the metrics configuration
    Default: ''
    
  # NotificationConfiguration parameters
  NotificationLambdaEvent:
    Type: String
    Description: Event for Lambda notification
    Default: ''
    
  NotificationLambdaFunction:
    Type: String
    Description: ARN of Lambda function for notification
    Default: ''
    
  # OwnershipControls parameters
  OwnershipControlsRule:
    Type: String
    Description: Ownership controls rule
    Default: ''
    
  # ReplicationConfiguration parameters
  ReplicationConfigurationRole:
    Type: String
    Description: IAM role ARN for replication
    Default: ''
    
  # VersioningConfiguration parameters
  VersioningConfigurationStatus:
    Type: String
    Description: Versioning state of the bucket
    Default: ''
    AllowedValues:
      - ''
      - Enabled
      - Suspended
      
  # WebsiteConfiguration parameters
  WebsiteIndexDocument:
    Type: String
    Description: Index document for website configuration
    Default: ''
    
  WebsiteErrorDocument:
    Type: String
    Description: Error document for website configuration
    Default: ''
    
  WebsiteRedirectAllRequestsToHostName:
    Type: String
    Description: Host name for redirect all requests
    Default: ''
    
  WebsiteRedirectAllRequestsToProtocol:
    Type: String
    Description: Protocol for redirect all requests
    Default: ''
    AllowedValues:
      - ''
      - http
      - https
      
  WebsiteRoutingRules:
    Type: CommaDelimitedList
    Description: Routing rules for website configuration
    Default: ''

Conditions:
  HasBucketName: !Not [!Equals [!Ref BucketName, '']]
  HasAccessControl: !Not [!Equals [!Ref AccessControl, '']]
  HasObjectLockEnabled: !Not [!Equals [!Ref ObjectLockEnabled, '']]
  HasTags: !Not [!Equals [!Select [0, !Ref Tags], '']]
  
  # CORS conditions
  HasCorsConfiguration: !Not [!Equals [!Ref CorsConfigurationAllowedHeaders, '']]
  HasCorsAllowedMethods: !Not [!Equals [!Ref CorsConfigurationAllowedMethods, '']]
  HasCorsAllowedOrigins: !Not [!Equals [!Ref CorsConfigurationAllowedOrigins, '']]
  HasCorsExposedHeaders: !Not [!Equals [!Ref CorsConfigurationExposedHeaders, '']]
  HasCorsMaxAge: !Not [!Equals [!Ref CorsConfigurationMaxAge, '']]
  
  # Lifecycle conditions
  HasLifecycleConfiguration: !Not [!Equals [!Ref LifecycleConfigurationId, '']]
  HasLifecyclePrefix: !Not [!Equals [!Ref LifecycleConfigurationPrefix, '']]
  HasLifecycleTagFilters: !Not [!Equals [!Ref LifecycleConfigurationTagFilters, '']]
  
  # Logging conditions
  HasLoggingConfiguration: !Not [!Equals [!Ref LoggingConfigurationDestination, '']]
  HasLoggingLogFilePrefix: !Not [!Equals [!Ref LoggingConfigurationLogFilePrefix, '']]
  
  # Metrics conditions
  HasMetricsConfiguration: !Not [!Equals [!Ref MetricsConfigurationId, '']]
  HasMetricsPrefix: !Not [!Equals [!Ref MetricsConfigurationPrefix, '']]
  
  # Notification conditions
  HasLambdaNotification: !And
    - !Not [!Equals [!Ref NotificationLambdaEvent, '']]
    - !Not [!Equals [!Ref NotificationLambdaFunction, '']]
  HasQueueNotification: !Not [!Equals [!Ref NotificationQueueEvent, '']]
  
  # BucketEncryption conditions
  HasBucketEncryptionSSEAlgorithm: !Not [!Equals [!Ref BucketEncryptionSSEAlgorithm, '']]
  HasBucketEncryptionKMSMasterKeyID: !Not [!Equals [!Ref BucketEncryptionKMSMasterKeyID, '']]
  HasBucketEncryptionBucketKeyEnabled: !Not [!Equals [!Ref BucketEncryptionBucketKeyEnabled, '']]
  
  # Website conditions
  HasWebsiteIndexDocument: !Not [!Equals [!Ref WebsiteIndexDocument, '']]
  HasWebsiteErrorDocument: !Not [!Equals [!Ref WebsiteErrorDocument, '']]
  HasWebsiteRedirectAllRequestsToHostName: !Not [!Equals [!Ref WebsiteRedirectAllRequestsToHostName, '']]
  HasWebsiteRedirectProtocol: !Not [!Equals [!Ref WebsiteRedirectAllRequestsToProtocol, '']]
  HasWebsiteRoutingRules: !Not [!Equals [!Ref WebsiteRoutingRules, '']]
  HasWebsiteConfiguration: !Or
    - !Condition HasWebsiteIndexDocument
    - !Condition HasWebsiteRedirectAllRequestsToHostName

Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !If [HasBucketName, !Ref BucketName, !Ref 'AWS::NoValue']
      AccessControl: !If [HasAccessControl, !Ref AccessControl, !Ref 'AWS::NoValue']
      ObjectLockEnabled: !If [HasObjectLockEnabled, !Ref ObjectLockEnabled, !Ref 'AWS::NoValue']
      Tags: !If [HasTags, !Join [',', !Ref Tags], !Ref 'AWS::NoValue']
      
      # PublicAccessBlockConfiguration - set to true by default
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      
      # AccelerateConfiguration
      AccelerateConfiguration: !If
        - HasAccelerateConfiguration
        - AccelerationStatus: !Ref AccelerateConfigurationAccelerationStatus
        - !Ref 'AWS::NoValue'
      
      # AnalyticsConfiguration
      AnalyticsConfiguration: !If
        - HasAnalyticsConfiguration
        - - Id: !Ref AnalyticsConfigurationId
            Prefix: !If [HasAnalyticsConfigurationPrefix, !Ref AnalyticsConfigurationPrefix, !Ref 'AWS::NoValue']
            TagFilters: !If 
              - HasAnalyticsConfigurationTagFilters
              - !Join [',', !Ref AnalyticsConfigurationTagFilters]
              - !Ref 'AWS::NoValue'
        - !Ref 'AWS::NoValue'
      
      # BucketEncryption
      BucketEncryption: !If
        - HasBucketEncryptionSSEAlgorithm
        - ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !If [HasBucketEncryptionKMSMasterKeyID, 'aws:kms', !Ref BucketEncryptionSSEAlgorithm]
              KMSMasterKeyID: !If [HasBucketEncryptionBucketKeyEnabled, !Ref BucketEncryptionKMSMasterKeyID, !Ref 'AWS::NoValue']
            BucketKeyEnabled: !If [HasBucketEncryptionBucketKeyEnabled, !Ref BucketEncryptionBucketKeyEnabled, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # CorsConfiguration
      CorsConfiguration: !If
        - HasCorsConfiguration
        - CorsRules:
          - AllowedHeaders: !If [HasCorsAllowedMethods, !Join [',', !Ref CorsConfigurationAllowedHeaders], !Ref 'AWS::NoValue']
          - AllowedMethods: !If [HasCorsAllowedMethods, !Join [',', !Ref CorsConfigurationAllowedMethods], !Ref 'AWS::NoValue']
          - AllowedOrigins: !If [HasCorsAllowedOrigins, !Join [',', !Ref CorsConfigurationAllowedOrigins], !Ref 'AWS::NoValue']
          - ExposedHeaders: !If [HasCorsExposedHeaders, !Join [',', !Ref CorsConfigurationExposedHeaders], !Ref 'AWS::NoValue']
          - MaxAge: !If [HasCorsMaxAge, !Ref CorsConfigurationMaxAge, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # LifecycleConfiguration
      LifecycleConfiguration: !If
        - HasLifecycleConfiguration
        - Rules:
          - Id: !Ref LifecycleConfigurationId
            Prefix: !If [HasLifecyclePrefix, !Ref LifecycleConfigurationPrefix, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # LoggingConfiguration
      LoggingConfiguration: !If
        - HasLoggingConfiguration
        - LoggingRules:
          - Destination: !Ref LoggingConfigurationDestination
          LogFilePrefix: !If [HasLoggingLogFilePrefix, !Ref LoggingConfigurationLogFilePrefix, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # MetricsConfiguration
      MetricsConfiguration: !If
        - HasMetricsConfiguration
        - - Id: !Ref MetricsConfigurationId
            Prefix: !If [HasMetricsPrefix, !Ref MetricsConfigurationPrefix, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # NotificationConfiguration
      NotificationConfiguration: !If
        - HasLambdaNotification
        - NotificationRules:
          - LambdaConfigurations: !If
              - HasQueueNotification
              - - Event: !Ref NotificationQueueEvent
                  Function: !Ref NotificationLambdaFunction
              - !Ref 'AWS::NoValue'
        - !Ref 'AWS::NoValue'
      
      # OwnershipControls
      OwnershipControls: !If
        - HasOwnershipControls
        - Rules:
          - ObjectOwnership: !Ref OwnershipControlsRule
        - !Ref 'AWS::NoValue'
      
      # ReplicationConfiguration
      ReplicationConfiguration: !If
        - HasReplicationConfiguration
        - Role: !Ref ReplicationConfigurationRole
        - Rules:
          - Id: !Ref ReplicationConfigurationRole
        - !Ref 'AWS::NoValue'
      
      # VersioningConfiguration
      VersioningConfiguration: !If
        - HasVersioningConfiguration
        - Status: !Ref VersioningConfigurationStatus
        - !Ref 'AWS::NoValue'
      
      # WebsiteConfiguration
      WebsiteConfiguration: !If
        - HasWebsiteConfiguration
        - !If
          - HasWebsiteRedirectAllRequestsToHostName
          - RedirectAllRequestsTo:
              HostName: !Ref WebsiteRedirectAllRequestsToHostName
              Protocol: !If [HasWebsiteRedirectProtocol, !Ref WebsiteRedirectAllRequestsToProtocol, !Ref 'AWS::NoValue']
          - !If
            - HasWebsiteIndexDocument
            - IndexDocument: !Ref WebsiteIndexDocument
              ErrorDocument: !If [HasWebsiteErrorDocument, !Ref WebsiteErrorDocument, !Ref 'AWS::NoValue']
              RoutingRules: !If [HasWebsiteRoutingRules, !Join [',', !Ref WebsiteRoutingRules], !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'

Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref S3Bucket
    Export:
      Name: !Sub '\${AWS::StackName}-S3AccessLogsBucketName'
  
  BucketARN:
    Description: ARN of the created S3 bucket
    Value: !GetAtt S3Bucket.Arn
    Export:
      Name: !Sub '\${AWS::StackName}-S3AccessLogsBucketArn'
  
  BucketDomainName:
    Description: Domain name of the created S3 bucket
    Value: !GetAtt S3Bucket.DomainName
    Export:
      Name: !Sub '\${AWS::StackName}-S3AccessLogsBucketDomainName'
  
  BucketRegionalDomainName:
    Description: Regional domain name of the created S3 bucket
    Value: !GetAtt S3Bucket.RegionalDomainName
    Export:
      Name: !Sub '\${AWS::StackName}-S3AccessLogsBucketRegionalDomainName'
  
  BucketWebsiteURL:
    Description: Website URL of the created S3 bucket (if website configuration is enabled)
    Value: !If [HasWebsiteConfiguration, !GetAtt S3Bucket.WebsiteURL, !Ref 'AWS::NoValue']
    Condition: HasWebsiteConfiguration
    Export:
      Name: !Sub '\${AWS::StackName}-S3AccessLogsBucketWebsiteURL'
      
