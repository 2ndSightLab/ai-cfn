AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for S3 bucket with all possible properties as parameters'

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket
    Default: 'my-s3-bucket'
    
  AccessControl:
    Type: String
    Description: Canned ACL to apply to the bucket
    Default: 'Private'
    AllowedValues:
      - ''
      - Private
      - PublicRead
      - PublicReadWrite
      - AuthenticatedRead
      - LogDeliveryWrite
      - BucketOwnerRead
      - BucketOwnerFullControl
      - AwsExecRead
      
  ObjectLockEnabled:
    Type: String
    Description: Enable object lock
    Default: 'false'
    AllowedValues:
      - ''
      - 'true'
      - 'false'
      
  Tags:
    Type: CommaDelimitedList
    Description: List of tags (Key=Value format)
    Default: ''
    
  # ... [other parameters] ...

Conditions:
  HasBucketName: !Not [!Equals [!Ref BucketName, '']]
  HasAccessControl: !Not [!Equals [!Ref AccessControl, '']]
  HasObjectLockEnabled: !Not [!Equals [!Ref ObjectLockEnabled, '']]
  HasTags: !Not [!Equals [!Select [0, !Ref Tags], '']
  
  # Child object conditions
  HasAccelerateConfiguration: !Not [!Equals [!Select [0, !Ref AccelerateConfiguration], '']]
  HasAnalyticsConfiguration: !Not [!Equals [!Select [0, !Ref AnalyticsConfiguration], '']]
  HasAnalyticsConfigurationPrefix: !Not [!Equals [!Select [0, !Ref AnalyticsConfigurationPrefix], '']]
  HasAnalyticsConfigurationTagFilters: !Not [!Equals [!Select [0, !Ref AnalyticsConfigurationTagFilters], '']]
  
  # BucketEncryption conditions
  HasBucketEncryptionSSEAlgorithm: !Not [!Equals [!Select [0, !Ref BucketEncryptionSSEAlgorithm], '']]
  HasBucketEncryptionKMS: !And 
    - !Not [!Equals [!Select [0, !Ref BucketEncryptionSSEAlgorithm], '']]
    - !Equals [!Select [0, !Ref BucketEncryptionSSEAlgorithm], 'aws:kms']
  HasBucketEncryptionKMSKey: !Not [!Equals [!Select [0, !Ref BucketEncryptionKMSMasterKeyID], '']]
  HasBucketKeyEnabled: !Not [!Equals [!Select [0, !Ref BucketEncryptionBucketKeyEnabled], '']]
  
  # CORS conditions
  HasCorsConfiguration: !Not [!Equals [!Select [0, !Ref CorsConfiguration], '']]
  HasCorsAllowedHeaders: !Not [!Equals [!Select [0, !Ref CorsConfigurationAllowedHeaders], '']]
  HasCorsAllowedMethods: !Not [!Equals [!Select [0, !Ref CorsConfigurationAllowedMethods], '']]
  HasCorsAllowedOrigins: !Not [!Equals [!Select [0, !Ref CorsConfigurationAllowedOrigins], '']]
  HasCorsExposedHeaders: !Not [!Equals [!Select [0, !Ref CorsConfigurationExposedHeaders], '']]
  HasCorsMaxAge: !Not [!Equals [!Select [0, !Ref CorsConfigurationMaxAge], '']]
  
  # IntelligentTiering conditions
  HasIntelligentTieringConfiguration: !Not [!Equals [!Select [0, !Ref IntelligentTieringConfiguration], '']]
  HasIntelligentTieringPrefix: !Not [!Equals [!Select [0, !Ref IntelligentTieringConfigurationPrefix], '']]
  HasIntelligentTieringTagFilters: !Not [!Equals [!Select [0, !Ref IntelligentTieringConfigurationTagFilters], '']]
  
  # Inventory conditions
  HasInventoryConfiguration: !Not [!Equals [!Select [0, !Ref InventoryConfiguration], '']]
  HasInventoryPrefix: !Not [!Equals [!Select [0, !Ref InventoryConfigurationPrefix], '']]
  
  # Lifecycle conditions
  HasLifecycleConfiguration: !Not [!Equals [!Select [0, !Ref LifecycleConfiguration], '']]
  HasLifecyclePrefix: !Not [!Equals [!Select [0, !Ref LifecycleConfigurationPrefix], '']]
  
  # Logging conditions
  HasLoggingConfiguration: !Not [!Equals [!Select [0, !Ref LoggingConfiguration], '']]
  
  # Metrics conditions
  HasMetricsConfiguration: !Not [!Equals [!Select [0, !Ref MetricsConfiguration], '']]
  
  # Notification conditions
  HasLambdaNotification: !And
    - !Not [!Equals [!Select [0, !Ref NotificationLambdaEvent], '']]
    - !Not [!Equals [!Select [0, !Ref NotificationLambdaFunction], '']]
  HasQueueNotification: !And
    - !Not [!Equals [!Select [0, !Ref NotificationQueueEvent], '']]
    - !Not [!Equals [!Select [0, !Ref NotificationQueueQueue], '']]
  HasTopicNotification: !Not [!Equals [!Select [0, !Ref NotificationTopicEvent], '']]
  
  # ObjectLock conditions
  HasObjectLockConfiguration: !Not [!Equals [!Select [0, !Ref ObjectLockConfiguration], '']]
  
  # OwnershipControls conditions
  HasOwnershipControls: !Not [!Equals [!Select [0, !Ref OwnershipControls], '']]
  
  # Replication conditions
  HasReplicationConfiguration: !Not [!Equals [!Select [0, !Ref ReplicationConfiguration], '']]
  
  # Versioning conditions
  HasVersioningConfiguration: !Not [!Equals [!Select [0, !Ref VersioningConfiguration], '']]
  
  # Website conditions
  HasWebsiteIndexDocument: !Not [!Equals [!Select [0, !Ref WebsiteIndexDocument], '']]
  HasWebsiteErrorDocument: !Not [!Equals [!Select [0, !Ref WebsiteErrorDocument], '']]
  HasWebsiteRedirectAllRequestsTo: !Not [!Equals [!Select [0, !Ref WebsiteRedirectAllRequestsToHostName], '']]
  HasWebsiteRedirectProtocol: !Not [!Equals [!Select [0, !Ref WebsiteRedirectAllRequestsToProtocol], '']]
  HasWebsiteRoutingRules: !Not [!Equals [!Select [0, !Ref WebsiteRoutingRules], '']]
  HasWebsiteConfiguration: !Or
    - !Condition HasWebsiteIndexDocument
    - !Condition HasWebsiteRedirectAllRequestsTo

Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !If [HasBucketName, !Ref BucketName, !Ref 'AWS::NoValue']
      AccessControl: !If [HasAccessControl, !Ref AccessControl, !Ref 'AWS::NoValue']
      ObjectLockEnabled: !If [HasObjectLockEnabled, !Ref ObjectLockEnabled, !Ref 'AWS::NoValue']
      Tags: !If [HasTags, !Join [',', !Ref Tags], !Ref 'AWS::NoValue']
      
      # PublicAccessBlockConfiguration - set to true by default
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      
      # AccelerateConfiguration
      AccelerateConfiguration: !If
        - HasAccelerateConfiguration
        - AccelerationStatus: !Ref AccelerateConfigurationAccelerationStatus
        - !Ref 'AWS::NoValue'
      
      # AnalyticsConfiguration
      AnalyticsConfiguration: !If
        - HasAnalyticsConfiguration
        - - Id: !Ref AnalyticsConfigurationId
            Prefix: !If [HasAnalyticsConfigurationPrefix, !Ref AnalyticsConfigurationPrefix, !Ref 'AWS::NoValue']
            TagFilters: !If 
              - HasAnalyticsConfigurationTagFilters
              - !Join [',', !Ref AnalyticsConfigurationTagFilters]
              - !Ref 'AWS::NoValue'
        - !Ref 'AWS::NoValue'
      
      # BucketEncryption
      BucketEncryption: !If
        - HasBucketEncryptionSSEAlgorithm
        - ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !If [HasBucketEncryptionKMS, 'aws:kms', !Ref BucketEncryptionSSEAlgorithm]
              KMSMasterKeyID: !If [HasBucketEncryptionKMSKey, !Ref BucketEncryptionKMSMasterKeyID, !Ref 'AWS::NoValue']
            BucketKeyEnabled: !If [HasBucketKeyEnabled, !Ref BucketEncryptionBucketKeyEnabled, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # CorsConfiguration
      CorsConfiguration: !If
        - HasCorsConfiguration
        - CorsRules:
          - AllowedHeaders: !If [HasCorsAllowedHeaders, !Join [',', !Ref CorsConfigurationAllowedHeaders], !Ref 'AWS::NoValue']
            AllowedMethods: !If [HasCorsAllowedMethods, !Join [',', !Ref CorsConfigurationAllowedMethods], !Ref 'AWS::NoValue']
            AllowedOrigins: !If [HasCorsAllowedOrigins, !Join [',', !Ref CorsConfigurationAllowedOrigins], !Ref 'AWS::NoValue']
            ExposedHeaders: !If [HasCorsExposedHeaders, !Join [',', !Ref CorsConfigurationExposedHeaders], !Ref 'AWS::NoValue']
            MaxAge: !If [HasCorsMaxAge, !Ref CorsConfigurationMaxAge, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # IntelligentTieringConfiguration
      IntelligentTieringConfiguration: !If
        - HasIntelligentTieringConfiguration
        - - Id: !Ref IntelligentTieringConfigurationId
            Status: !Ref IntelligentTieringConfigurationStatus
            Prefix: !If [HasIntelligentTieringPrefix, !Ref IntelligentTieringConfigurationPrefix, !Ref 'AWS::NoValue']
            TagFilters: !If 
              - HasIntelligentTieringTagFilters
              - !Join [',', !Ref IntelligentTieringConfigurationTagFilters]
              - !Ref 'AWS::NoValue'
        - !Ref 'AWS::NoValue'
      
      # InventoryConfiguration
      InventoryConfiguration: !If
        - HasInventoryConfiguration
        - - Id: !Ref InventoryConfigurationId
            Enabled: !Ref InventoryConfigurationEnabled
            Prefix: !If [HasInventoryPrefix, !Ref InventoryConfigurationPrefix, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # LifecycleConfiguration
      LifecycleConfiguration: !If
        - HasLifecycleConfiguration
        - Rules:
          - Id: !Ref LifecycleConfigurationId
            Status: !Ref LifecycleConfigurationStatus
            Prefix: !If [HasLifecyclePrefix, !Ref LifecycleConfigurationPrefix, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # LoggingConfiguration
      LoggingConfiguration: !If
        - HasLoggingConfiguration
        - LoggingRules:
          - Destination: !Ref LoggingConfigurationDestination
          LogFilePrefix: !If [HasLoggingConfiguration, !Ref LoggingConfigurationLogFilePrefix, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # MetricsConfiguration
      MetricsConfiguration: !If
        - HasMetricsConfiguration
        - - Id: !Ref MetricsConfigurationId
            Prefix: !If [HasMetricsConfigurationPrefix, !Ref InventoryConfigurationPrefix, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # NotificationConfiguration
      NotificationConfiguration: !If
        - HasNotificationConfiguration
        - LambdaConfigurations: !If
            - HasLambdaNotification
            - - Event: !Ref NotificationLambdaEvent
                Function: !Ref NotificationLambdaFunction
            - !Ref 'AWS::NoValue'
          QueueConfigurations: !If
            - HasQueueNotification
            - - Event: !Ref NotificationQueueEvent
                Queue: !Ref NotificationQueueQueue
            - !Ref 'AWS::NoValue'
          TopicConfigurations: !If
            - HasTopicNotification
            - - Event: !Ref NotificationTopicEvent
                Topic: !Ref NotificationTopicTopic
            - !Ref 'AWS::NoValue'
        - !Ref 'AWS::NoValue'
      
      # ObjectLockConfiguration
      ObjectLockConfiguration: !If
        - HasObjectLockConfiguration
        - ObjectLockEnabled: 'Enabled'
          Rule: !If
            - HasObjectLockConfiguration
            - DefaultRetention:
                Mode: !Ref ObjectLockConfigurationRetentionMode
                Days: !If [HasObjectLockConfigurationRetentionDays, !Ref ObjectLockConfigurationRetentionDays, !Ref 'AWS::NoValue']
                Years: !If [HasObjectLockConfigurationRetentionYears, !Ref ObjectLockConfigurationRetentionYears, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # OwnershipControls
      OwnershipControls: !If
        - HasOwnershipControls
        - Rules:
          - ObjectOwnership: !Ref OwnershipControlsObjectOwnership
        - !Ref 'AWS::NoValue'
      
      # ReplicationConfiguration
      ReplicationConfiguration: !If
        - HasReplicationConfiguration
        - Role: !Ref ReplicationConfigurationRole
        - Rules:
          - Id: !Ref ReplicationConfigurationRuleId
            Status: !Ref ReplicationConfigurationRuleStatus
            Prefix: !If [HasReplicationConfigurationPrefix, !Ref InventoryConfigurationPrefix, !Ref 'AWS::NoValue']
            Destination:
              Bucket: !If [HasReplicationConfigurationDestination, !Ref ReplicationConfigurationDestination, !Ref 'AWS::NoValue']
              StorageClass: !If [HasReplicationConfigurationStorageClass, !Ref ReplicationConfigurationStorageClass, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      
      # VersioningConfiguration
      VersioningConfiguration: !If
        - HasVersioningConfiguration
        - Status: !Ref VersioningConfigurationStatus
        - !Ref 'AWS::NoValue'
      
      # WebsiteConfiguration
      WebsiteConfiguration: !If
        - HasWebsiteConfiguration
        - !If
          - HasWebsiteRedirectAllRequestsTo
          - RedirectAllRequestsTo:
              HostName: !Ref WebsiteRedirectAllRequestsToHostName
              Protocol: !If [HasWebsiteRedirectProtocol, !Ref WebsiteRedirectAllRequestsToProtocol, !Ref 'AWS::NoValue']
          - !If
            - HasWebsiteIndexDocument
            - IndexDocument: !Ref WebsiteIndexDocument
              ErrorDocument: !If [HasWebsiteErrorDocument, !Ref WebsiteErrorDocument, !Ref 'AWS::NoValue']
              RoutingRules: !If [HasWebsiteRoutingRules, !Join [',', !Ref WebsiteRoutingRules], !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'

Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref S3Bucket
    Export:
      Name: !Sub "\${AWS::StackName}-S3AccessLogsBucketName"
  
  BucketARN:
    Description: ARN of the created S3 bucket
    Value: !GetAtt S3Bucket.Arn
    Export:
      Name: !Sub "\${AWS::StackName}-S3AccessLogsBucketArn"
  
  BucketDomainName:
    Description: Domain name of the created S3 bucket
    Value: !GetAtt S3Bucket.DomainName
    Export:
      Name: !Sub "\${AWS::StackName}-S3AccessLogsBucketDomainName"
  
  BucketRegionalDomainName:
    Description: Regional domain name of the created S3 bucket
    Value: !GetAtt S3Bucket.RegionalDomainName
    Export:
      Name: !Sub "\${AWS::StackName}-S3AccessLogsBucketRegionalDomainName"
  
  BucketWebsiteURL:
    Description: Website URL of the created S3 bucket (if website configuration is enabled)
    Value: !If [HasWebsiteConfiguration, !GetAtt S3Bucket.WebsiteURL, !Ref 'AWS::NoValue']
    Condition: HasWebsiteConfiguration
    Export:
      Name: !Sub "\${AWS::StackName}-S3AccessLogsBucketWebsiteURL"
