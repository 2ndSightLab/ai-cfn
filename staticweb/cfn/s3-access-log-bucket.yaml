AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 Bucket for S3 Access Logs with Security Best Practices'

Parameters:
  LogRetentionDays:
    Type: Number
    Description: 'Number of days to retain S3 access logs before deletion'
    Default: 90
    MinValue: 30
    
  BucketName:
    Type: String

Conditions:
  HasBucketNameSuffix: !Not [!Equals [!Ref BucketNameSuffix, '']]

Resources:
  S3AccessLogsBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: AccessLogRetentionRule
            Status: Enabled
            ExpirationInDays: !Ref LogRetentionDays
            NoncurrentVersionExpirationInDays: 30
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

  S3AccessLogsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3AccessLogsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'EnforceHTTPS'
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !Sub '${S3AccessLogsBucket.Arn}'
              - !Sub '${S3AccessLogsBucket.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
          - Sid: 'DenyUnencryptedObjectUploads'
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub '${S3AccessLogsBucket.Arn}/*'
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'AES256'
          - Sid: 'AllowS3LogDelivery'
            Effect: Allow
            Principal:
              Service: 'logging.s3.amazonaws.com'
            Action: 's3:PutObject'
            Resource: !Sub '${S3AccessLogsBucket.Arn}/*'
            Condition:
              StringEquals:
                'aws:SourceAccount': !Ref 'AWS::AccountId'

Outputs:
  S3AccessLogsBucketName:
    Description: 'Name of the S3 bucket for S3 access logs'
    Value: !Ref S3AccessLogsBucket
    Export:
      Name: !Sub '${AWS::StackName}-S3AccessLogsBucketName'
      
  S3AccessLogsBucketArn:
    Description: 'ARN of the S3 bucket for S3 access logs'
    Value: !GetAtt S3AccessLogsBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-S3AccessLogsBucketArn'
      
  S3AccessLogsBucketDomainName:
    Description: 'Domain name of the S3 bucket for S3 access logs'
    Value: !GetAtt S3AccessLogsBucket.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-S3AccessLogsBucketDomainName'
