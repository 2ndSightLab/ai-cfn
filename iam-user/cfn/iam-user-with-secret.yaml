AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates an IAM user with a secret in AWS Secrets Manager'

Parameters:
  Username:
    Type: String
    Description: Name for the IAM user
    MinLength: 1
    MaxLength: 64
    AllowedPattern: "[a-zA-Z0-9+=,.@_-]+"
    ConstraintDescription: Must be a valid IAM username
  
  KmsKeyArn:
    Type: String
    Description: ARN of the KMS key to use for encrypting the secret
    AllowedPattern: "arn:aws:kms:[a-z0-9-]+:[0-9]{12}:key/[a-f0-9-]+"
    ConstraintDescription: Must be a valid KMS key ARN
  
  AdditionalPrincipalArn:
    Type: String
    Description: ARN of an additional principal (user/role) who should have access to the secret
    AllowedPattern: "^(arn:aws:iam::[0-9]{12}:(user|role)/[a-zA-Z0-9+=,.@_/-]+|arn:aws:iam::[0-9]{12}:root)?$"
    ConstraintDescription: Must be a valid IAM user or role ARN, root user ARN, or left empty

Resources:
  User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref Username
      Path: /
      Tags:
        - Key: CreatedBy
          Value: CloudFormation

  AccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref User

  Secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref Username
      Description: !Sub "Access key credentials for IAM user ${Username}"
      KmsKeyId: !Ref KmsKeyArn
      SecretString: !Sub |
        {
          "username": "${Username}",
          "access_key_id": "${AccessKey}",
          "secret_access_key": "${AccessKey.SecretAccessKey}"
        }

  SecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref Secret
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                - !GetAtt User.Arn
                - !If [HasAdditionalPrincipal, !Ref AdditionalPrincipalArn, !Ref "AWS::NoValue"]
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource: '*'

Conditions:
  HasAdditionalPrincipal: !Not [!Equals [!Ref AdditionalPrincipalArn, '']]

Outputs:
  UserArn:
    Description: ARN of the created IAM user
    Value: !GetAtt User.Arn
  
  AccessKeyId:
    Description: Access key ID for the IAM user
    Value: !Ref AccessKey
  
  SecretName:
    Description: Name of the secret containing the credentials
    Value: !Ref Secret
  
  SecretArn:
    Description: ARN of the secret containing the credentials
    Value: !Ref Secret


