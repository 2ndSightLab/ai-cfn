AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create an IAM user with password stored in Secrets Manager'

Parameters:
  Username:
    Type: String
    Description: Name for the IAM user
    MinLength: 1
    MaxLength: 64
    AllowedPattern: "^[a-zA-Z0-9+=,.@_-]+$"
    ConstraintDescription: Must be a valid IAM username
  
  KmsKeyArn:
    Type: String
    Description: ARN of the KMS key to use for encrypting the secret
    AllowedPattern: "^arn:aws:kms:[a-z0-9-]+:[0-9]{12}:key/[a-f0-9-]+$"
    ConstraintDescription: Must be a valid KMS key ARN

Resources:
  GeneratedPassword:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: !Ref Username
      Description: !Sub "Password for IAM user ${Username}"
      KmsKeyId: !Ref KmsKeyArn
      GenerateSecretString:
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
        RequireEachIncludedType: true

  # Simplified resource policy with only account-level access
  SecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref GeneratedPassword
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub '${AWS::AccountId}'
            Action: 'secretsmanager:*'
            Resource: '*'

  MyIAMUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Ref Username
      Path: "/"
      LoginProfile:
        Password: !Sub '{{resolve:secretsmanager:${GeneratedPassword}::SecretString}}'
        PasswordResetRequired: true

Outputs:
  UserName:
    Description: Name of the created IAM user
    Value: !Ref MyIAMUser
  
  SecretName:
    Description: Name of the secret containing the user's password
    Value: !Ref GeneratedPassword
  
  SecretEncryptionKey:
    Description: KMS key used to encrypt the secret
    Value: !Ref KmsKeyArn
